---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Swagger Article"
    description: "A sample API that uses a article as an example to demonstrate features in the swagger-2.0 specification"
    termsOfService: "http://swagger.io/terms/"
    contact:
      name: "Swagger API Team"
    license:
      name: "MIT"
  host: "localhost:8001"
  basePath: "/v1"
  schemes:
    - "http"
  produces:
    - "application/json"
  paths:
    /articles:
      get:
        summary: List all articles
        operationId: listArticles
        tags:
          - articles
        parameters:
          - name: limit
            in: query
            description: How many items to return at one time (max 100)
            required: false
            type: integer
            format: int32
        responses:
          "200":
            description: An paged array of articles
            headers:
              x-next:
                type: string
                description: A link to the next page of responses
            schema:
              $ref: '#/definitions/Articles'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
    /article:
      post:
        summary: Create a article
        operationId: createArticle
        tags:
          - article
        parameters:
          - name: createArticleRequest
            in: body
            schema:
              $ref: '#/definitions/CreateArticleRequest'
        responses:
          "201":
            description: Article response
            schema:
              $ref: '#/definitions/CreateArticleResponse'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
    /article/{articleId}:
      get:
        summary: Info for a specific article
        operationId: findArticleById
        tags:
          - article
        parameters:
          - name: articleId
            in: path
            required: true
            description: The id of the article to retrieve
            type: string
        responses:
          "200":
            description: Expected response to a valid request
            schema:
              $ref: '#/definitions/Article'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
      delete:
        summary: Delete a specific article
        operationId: deleteArticleById
        tags:
          - article
        parameters:
          - name: articleId
            in: path
            required: true
            description: The id of the article to delete
            type: string
        responses:
          "200":
            description: OK
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
    /article/{articleId}/board:
      get:
        summary: Info for a specific board
        operationId: findBoardByArticleId
        tags:
          - board
        parameters:
          - name: articleId
            in: path
            required: true
            description: The id of the board to retrieve
            type: string
        responses:
          "200":
            description: Expected response to a valid request
            schema:
              $ref: '#/definitions/BoardContainer'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'

  definitions:
    # Defined here
    CreateArticleRequest:
      type: object
    CreateArticleResponse:
      type: object
    Article:
      type: object
    BoardContainer:
      type: object
    ResponseError:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    Articles:
      type: array
      items:
        $ref: '#/definitions/Article'
    NotFound:
      description: The specified api was not found
      schema:
        $ref: '#/definitions/ResponseError'
    Unauthorized:
      description: Unauthorized
      schema:
        $ref: '#/definitions/ResponseError'
