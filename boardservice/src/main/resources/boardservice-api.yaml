---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Swagger Petstore"
    description: "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification"
    termsOfService: "http://swagger.io/terms/"
    contact:
      name: "Swagger API Team"
    license:
      name: "MIT"
  host: "localhost:8002"
  basePath: "/board"
  schemes:
    - "http"
  consumes:
    - "application/json"
  produces:
    - "application/json"
  paths:
    /boards:
      get:
        summary: List all boards
        operationId: listBoards
        tags:
          - boards
        parameters:
          - name: limit
            in: query
            description: How many items to return at one time (max 100)
            required: false
            type: integer
            format: int32
        responses:
          "200":
            description: An paged array of boards
            headers:
              x-next:
                type: string
                description: A link to the next page of responses
            schema:
              $ref: '#/definitions/BoardContainers'
          default:
            description: unexpected error
            schema:
              $ref: '#/definitions/Error'
      post:
        summary: Create a board
        operationId: createBoards
        tags:
          - boards
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error
            schema:
              $ref: '#/definitions/Error'
    /boards/{boardId}:
      get:
        summary: Info for a specific board
        operationId: showBoardById
        tags:
          - boards
        parameters:
          - name: boardId
            in: path
            required: true
            description: The id of the board to retrieve
            type: string
        responses:
          "200":
            description: Expected response to a valid request
            schema:
              $ref: '#/definitions/BoardContainer'
          default:
            description: unexpected error
            schema:
              $ref: '#/definitions/Error'
  definitions:
    BoardContainer:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    BoardContainers:
      type: array
      items:
        $ref: '#/definitions/BoardContainer'
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
