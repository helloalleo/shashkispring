---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Swagger Petstore"
    description: "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification"
    termsOfService: "http://swagger.io/terms/"
    contact:
      name: "Swagger API Team"
    license:
      name: "MIT"
  host: "localhost:8002"
  basePath: "/v1"
  schemes:
    - "http"
#  consumes:
#    - "application/json"
  produces:
    - "application/json;charset=UTF-8"
  paths:
    /boards:
      post:
        summary: Get boards by ids
        operationId: listBoardsByIds
        tags:
          - boards
        parameters:
          - name: boardIds
            in: body
            schema:
              $ref: '#/definitions/Strings'
        responses:
          "201":
            description: Boards loaded
            schema:
              $ref: '#/definitions/Boards'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
    /board:
      post:
        summary: Create a board
        operationId: createBoard
        tags:
          - board
        parameters:
          - name: createBoardRequest
            in: body
            schema:
              $ref: '#/definitions/CreateBoardRequest'
        responses:
          "201":
            description: Board response
            schema:
              $ref: '#/definitions/BoardContainer'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
    /board/{boardId}:
      get:
        summary: Info for a specific board
        operationId: findBoardById
        tags:
          - board
        parameters:
          - name: boardId
            in: path
            required: true
            description: The id of the board to retrieve
            type: string
        responses:
          "200":
            description: Expected response to a valid request
            schema:
              $ref: '#/definitions/BoardContainer'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
      delete:
        summary: Delete a specific board
        operationId: deleteBoardById
        tags:
          - board
        parameters:
          - name: boardId
            in: path
            required: true
            description: The id of the board to delete
            type: string
        responses:
          "200":
            description: OK
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
    /board/highlight:
      post:
        summary: Info for a specific board
        operationId: highlightBoard
        tags:
          - board
        parameters:
          - name: board
            in: body
            required: true
            description: A board to be highlighted
            schema:
              $ref: '#/definitions/BoardContainer'
        responses:
          "200":
            description: Expected response to a valid request
            schema:
              type: object
              $ref: '#/definitions/BoardContainer'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'
    /board/move:
      post:
        summary: Info for a specific board
        operationId: move
        tags:
          - board
        parameters:
          - name: board
            in: body
            required: true
            description: A board to be highlighted
            schema:
              $ref: '#/definitions/BoardContainer'
        responses:
          "200":
            description: Expected response to a valid request
            schema:
              type: object
              $ref: '#/definitions/BoardContainer'
          default:
            description: unexpected ResponseError
            schema:
              $ref: '#/definitions/ResponseError'

  definitions:
    # Mapped
    BoardContainer:
      type: object
    Square:
      type: object
    CreateBoardRequest:
      type: object
    # Defined here
    Boards:
      type: array
      items:
        $ref: '#/definitions/BoardContainer'
    Strings:
      type: array
      items:
        type: string
    ResponseError:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    NotFound:
      description: The specified api was not found
      schema:
        $ref: '#/definitions/ResponseError'
    Unauthorized:
      description: Unauthorized
      schema:
        $ref: '#/definitions/ResponseError'
